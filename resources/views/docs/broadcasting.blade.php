<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <title>Laravel Broadcasting Guide</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: sans-serif;
            line-height: 1.6;
            padding: 2rem;
            background-color: #f8fafc;
            color: #333;
        }

        h1,
        h2,
        h3 {
            color: #1f2937;
        }

        code {
            background: #e2e8f0;
            padding: 2px 6px;
            border-radius: 4px;
        }

        pre {
            background: #e2e8f0;
            padding: 1rem;
            border-radius: 6px;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin: 1rem 0;
        }

        table,
        th,
        td {
            border: 1px solid #cbd5e1;
        }

        th,
        td {
            padding: 8px;
            text-align: left;
        }

        .highlight {
            background: #d1fae5;
            padding: 4px 8px;
            display: inline-block;
        }
    </style>
</head>

<body>
    <h1>H∆∞·ªõng D·∫´n Laravel Broadcasting</h1>

    <h2>üî∞ Gi·ªõi thi·ªáu chung</h2>
    <p>Laravel Broadcasting l√† h·ªá th·ªëng gi√∫p b·∫°n g·ª≠i d·ªØ li·ªáu real-time t·ª´ backend ƒë·∫øn frontend m·ªôt c√°ch t·ª± ƒë·ªông, th∆∞·ªùng
        d√πng trong c√°c ·ª©ng d·ª•ng nh∆∞:</p>
    <ul>
        <li>Chat realtime</li>
        <li>Th√¥ng b√°o (notifications) t·ª©c th·ªùi</li>
        <li>C·∫≠p nh·∫≠t d·ªØ li·ªáu b·∫£ng/bi·ªÉu ƒë·ªì kh√¥ng c·∫ßn reload</li>
        <li>·ª®ng d·ª•ng multiplayer ho·∫∑c collaborative</li>
    </ul>
    <p>Broadcasting k·∫øt h·ª£p gi·ªØa s·ª± ki·ªán Laravel v√† WebSockets ho·∫∑c d·ªãch v·ª• push ƒë·ªÉ truy·ªÅn d·ªØ li·ªáu.</p>

    <h2>üìú Ng√†y x∆∞a tr∆∞·ªõc khi c√≥ Broadcasting</h2>
    <p>Tr∆∞·ªõc khi Broadcasting ph·ªï bi·∫øn, c√°c h·ªá th·ªëng realtime th∆∞·ªùng ph·∫£i:</p>
    <ul>
        <li>D√πng <strong>AJAX polling</strong>: g·ªçi API li√™n t·ª•c m·ªói v√†i gi√¢y ƒë·ªÉ ki·ªÉm tra tin nh·∫Øn m·ªõi ‚Üí t·ªën bƒÉng th√¥ng,
            server m·ªát.</li>
        <li>D√πng <strong>long-polling</strong>: gi·ªØ k·∫øt n·ªëi m·ªü ‚Üí kh√≥ scale.</li>
        <li>Vi·∫øt tay b·∫±ng <strong>Socket.IO</strong> trong Node.js ho·∫∑c c√†i th√™m server ri√™ng ƒë·ªÉ x·ª≠ l√Ω websocket.</li>
    </ul>
    <p><strong>Laravel Broadcasting</strong> gi√∫p m·ªçi th·ª© tr·ªü n√™n ƒë∆°n gi·∫£n, t√≠ch h·ª£p lu√¥n v·ªõi h·ªá th·ªëng Event c·ªßa
        Laravel.</p>

    {{-- Laravel Broadcasting Flow & Comparison --}}

    <section class="mt-5">
        <h2 class="text-xl font-bold mb-3">‚öôÔ∏è Lu·ªìng ho·∫°t ƒë·ªông c·ªßa Laravel Broadcasting</h2>
        <ol class="list-decimal list-inside space-y-1">
            <li>Client ƒëƒÉng k√Ω k√™nh th√¥ng qua Laravel Echo (WebSocket).</li>
            <li>Server ph√°t sinh event (v√≠ d·ª•: g·ª≠i tin nh·∫Øn).</li>
            <li>Laravel s·ª≠ d·ª•ng driver Broadcasting (Pusher, Soketi...) ƒë·ªÉ ƒë·∫©y s·ª± ki·ªán real-time.</li>
            <li>Client nh·∫≠n d·ªØ li·ªáu ngay l·∫≠p t·ª©c qua WebSocket, kh√¥ng c·∫ßn h·ªèi l·∫°i server.</li>
        </ol>
    </section>

    <section class="mt-6">
        <h2 class="text-xl font-bold mb-3">üîÅ So s√°nh v·ªõi c√°c ph∆∞∆°ng ph√°p kh√°c</h2>
        <table class="table-auto w-full border border-gray-300 text-sm">
            <thead class="bg-gray-100">
                <tr>
                    <th class="border border-gray-300 px-2 py-1 text-left">Ph∆∞∆°ng ph√°p</th>
                    <th class="border border-gray-300 px-2 py-1 text-left">ƒê·∫∑c ƒëi·ªÉm</th>
                    <th class="border border-gray-300 px-2 py-1 text-left">Nh∆∞·ª£c ƒëi·ªÉm</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="border px-2 py-1">AJAX Polling</td>
                    <td class="border px-2 py-1">G·ªçi API li√™n t·ª•c ƒë·ªÉ ki·ªÉm tra tin nh·∫Øn m·ªõi</td>
                    <td class="border px-2 py-1">T·ªën bƒÉng th√¥ng, tƒÉng t·∫£i server, ƒë·ªô tr·ªÖ cao</td>
                </tr>
                <tr>
                    <td class="border px-2 py-1">Long Polling</td>
                    <td class="border px-2 py-1">Gi·ªØ k·∫øt n·ªëi m·ªü v√† ph·∫£n h·ªìi khi c√≥ d·ªØ li·ªáu m·ªõi</td>
                    <td class="border px-2 py-1">Tr·ªÖ th·∫•p h∆°n polling nh∆∞ng kh√≥ scale, ti√™u t·ªën t√†i nguy√™n</td>
                </tr>
                <tr>
                    <td class="border px-2 py-1">Vi·∫øt tay b·∫±ng Socket.IO</td>
                    <td class="border px-2 py-1">D√πng Node.js ƒë·ªÉ t·∫°o WebSocket server ri√™ng</td>
                    <td class="border px-2 py-1">M·∫°nh m·∫Ω nh∆∞ng c·∫ßn h·ªá th·ªëng ri√™ng, kh√≥ t√≠ch h·ª£p v·ªõi Laravel</td>
                </tr>
                <tr>
                    <td class="border px-2 py-1 font-semibold">Laravel Broadcasting</td>
                    <td class="border px-2 py-1">T√≠ch h·ª£p s·∫µn v·ªõi Laravel, s·ª≠ d·ª•ng WebSocket driver nh∆∞ Soketi</td>
                    <td class="border px-2 py-1">T·ªëi ∆∞u cho Laravel, d·ªÖ tri·ªÉn khai, nh∆∞ng c·∫ßn queue v√† WebSocket server
                    </td>
                </tr>
            </tbody>
        </table>
    </section>

    <h1>üìä B·∫£ng So S√°nh C√°c D·ªãch V·ª• Broadcasting</h1>
    <table>
        <thead>
            <tr>
                <th>D·ªãch V·ª•</th>
                <th>C√†i ƒê·∫∑t</th>
                <th>Chi Ph√≠</th>
                <th>ƒê·∫∑c ƒêi·ªÉm</th>
                <th>D·ª± √Ån Ph√π H·ª£p</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Pusher</td>
                <td>D·ªÖ c√†i ƒë·∫∑t qua Composer v√† NPM, h·ªó tr·ª£ Laravel Echo.</td>
                <td>Mi·ªÖn ph√≠ v·ªõi gi·ªõi h·∫°n, c√≥ c√°c g√≥i tr·∫£ ph√≠ theo m·ª©c ƒë·ªô s·ª≠ d·ª•ng.</td>
                <td>D·ªãch v·ª• b√™n th·ª© ba, d·ªÖ t√≠ch h·ª£p, nh∆∞ng c√≥ gi·ªõi h·∫°n mi·ªÖn ph√≠ v√† y√™u c·∫ßu k·∫øt n·ªëi internet.</td>
                <td>D·ª± √°n nh·ªè v√† v·ª´a, ·ª©ng d·ª•ng c·∫ßn nhanh ch√≥ng tri·ªÉn khai m√† kh√¥ng c·∫ßn qu·∫£n l√Ω h·∫° t·∫ßng.</td>
            </tr>
            <tr>
                <td>Laravel WebSockets</td>
                <td>C√†i ƒë·∫∑t qua Composer, c·∫ßn c·∫•u h√¨nh server ri√™ng.</td>
                <td>Mi·ªÖn ph√≠, nh∆∞ng c·∫ßn t·ª± host v√† b·∫£o tr√¨ server.</td>
                <td>Self-hosted, kh√¥ng ph·ª• thu·ªôc v√†o d·ªãch v·ª• b√™n ngo√†i, nh∆∞ng y√™u c·∫ßu t√†i nguy√™n h·ªá th·ªëng ƒë·ªÉ duy tr√¨.
                </td>
                <td>D·ª± √°n trung b√¨nh v√† l·ªõn, n∆°i m√† b·∫°n mu·ªën ki·ªÉm so√°t ho√†n to√†n h·∫° t·∫ßng v√† c·∫ßn t√≠nh linh ho·∫°t.</td>
            </tr>
            <tr>
                <td>Soketi</td>
                <td>C√†i ƒë·∫∑t qua Docker, s·ª≠ d·ª•ng c·∫•u h√¨nh gi·ªëng Pusher.</td>
                <td>Mi·ªÖn ph√≠, c·∫ßn host ri√™ng.</td>
                <td>Nh·∫π, nhanh, d·ªÖ d√†ng tri·ªÉn khai v√† s·ª≠ d·ª•ng √≠t t√†i nguy√™n h∆°n, t∆∞∆°ng th√≠ch v·ªõi Pusher API.</td>
                <td>D·ª± √°n l·ªõn, c·∫ßn hi·ªáu su·∫•t cao v√† kh·∫£ nƒÉng m·ªü r·ªông, y√™u c·∫ßu √≠t t√†i nguy√™n h∆°n.</td>
            </tr>
            <tr>
                <td>Ably</td>
                <td>C√†i ƒë·∫∑t PHP SDK qua Composer, s·ª≠ d·ª•ng Laravel Echo.</td>
                <td>C√≥ g√≥i mi·ªÖn ph√≠ gi·ªõi h·∫°n, g√≥i tr·∫£ ph√≠ theo nhu c·∫ßu s·ª≠ d·ª•ng.</td>
                <td>D·ªãch v·ª• ƒë√°m m√¢y, cung c·∫•p t·ªëc ƒë·ªô cao v√† h·ªó tr·ª£ nhi·ªÅu khu v·ª±c, d·ªÖ d√†ng m·ªü r·ªông.</td>
                <td>D·ª± √°n nh·ªè ƒë·∫øn l·ªõn, ƒë·∫∑c bi·ªát l√† ·ª©ng d·ª•ng di ƒë·ªông ho·∫∑c to√†n c·∫ßu c·∫ßn h·ªó tr·ª£ nhi·ªÅu khu v·ª±c.</td>
            </tr>
            <tr>
                <td>Redis</td>
                <td>C√†i ƒë·∫∑t Redis server, c·∫•u h√¨nh v·ªõi Laravel Echo.</td>
                <td>Mi·ªÖn ph√≠, nh∆∞ng c·∫ßn t·ª± host Redis server.</td>
                <td>Ph√π h·ª£p v·ªõi c√°c d·ª± √°n c√≥ y√™u c·∫ßu t√πy ch·ªânh cao, c·∫ßn c·∫•u h√¨nh Redis v√† c√°c c√¥ng c·ª• kh√°c nh∆∞
                    Socket.IO.</td>
                <td>D·ª± √°n l·ªõn, y√™u c·∫ßu t√≠nh t√πy ch·ªânh cao v√† kh√¥ng ph·ª• thu·ªôc v√†o d·ªãch v·ª• ƒë√°m m√¢y b√™n ngo√†i.</td>
            </tr>
        </tbody>
    </table>


    <h2>üöÄ 1. Pusher ‚Äì D·ªãch v·ª• b√™n th·ª© ba</h2>
    <p>Pusher l√† m·ªôt d·ªãch v·ª• b√™n th·ª© ba gi√∫p b·∫°n d·ªÖ d√†ng g·ª≠i d·ªØ li·ªáu real-time ƒë·∫øn frontend qua WebSockets. Tuy nhi√™n,
        n√≥ c√≥ gi·ªõi h·∫°n mi·ªÖn ph√≠ v√† y√™u c·∫ßu c√≥ k·∫øt n·ªëi internet.</p>

    <h3>C√†i ƒë·∫∑t:</h3>
    <p><strong>C√†i ƒë·∫∑t Pusher PHP Server:</strong></p>
    <pre><code>composer require pusher/pusher-php-server</code></pre>

    <p><strong>C√†i ƒë·∫∑t Laravel Echo v√† Pusher JS:</strong></p>
    <pre><code>npm install --save laravel-echo pusher-js</code></pre>

    <h3>C·∫•u h√¨nh .env:</h3>
    <p>Trong t·ªáp .env, c·∫•u h√¨nh c√°c th√¥ng tin li√™n quan ƒë·∫øn Pusher:</p>
    <pre><code>
BROADCAST_DRIVER=pusher
PUSHER_APP_ID=your-app-id
PUSHER_APP_KEY=your-app-key
PUSHER_APP_SECRET=your-app-secret
PUSHER_APP_CLUSTER=mt1
    </code></pre>

    <h3>C√†i ƒë·∫∑t c·∫•u h√¨nh trong config/broadcasting.php:</h3>
    <p>Laravel s·∫Ω t·ª± ƒë·ªông ƒë·ªçc th√¥ng tin t·ª´ .env ƒë·ªÉ c·∫•u h√¨nh Pusher. B·∫°n c√≥ th·ªÉ t√¨m v√† ch·ªânh s·ª≠a ph·∫ßn sau trong t·ªáp
        config/broadcasting.php:</p>
    <pre><code>
'connections' => [
    'pusher' => [
        'driver' => 'pusher',
        'key' => env('PUSHER_APP_KEY'),
        'secret' => env('PUSHER_APP_SECRET'),
        'app_id' => env('PUSHER_APP_ID'),
        'options' => [
            'cluster' => env('PUSHER_APP_CLUSTER'),
            'useTLS' => true,
        ],
    ],
],
    </code></pre>

    <h3>T·∫°o Event v√† Broadcast:</h3>
    <p>T·∫°o m·ªôt Event v√† broadcast n√≥:</p>
    <pre><code>php artisan make:event MessageSent</code></pre>

    <p>Trong MessageSent, b·∫°n s·∫Ω th·ª±c hi·ªán vi·ªác broadcast nh∆∞ sau:</p>
    <pre><code>
public function broadcastOn()
{
    return new Channel('chat');
}
    </code></pre>

    <h3>Frontend:</h3>
    <p>S·ª≠ d·ª•ng Laravel Echo v√† Pusher JS tr√™n frontend ƒë·ªÉ l·∫Øng nghe c√°c s·ª± ki·ªán:</p>
    <pre><code>
Echo.channel('chat')
    .listen('MessageSent', (event) => {
        console.log(event.message);
    });
    </code></pre>

    <h2>üß© 2. Laravel WebSockets ‚Äì T·ª± host nh∆∞ Pusher</h2>
    <p>Laravel WebSockets l√† m·ªôt g√≥i t·ª± host WebSocket nh∆∞ Pusher, cho ph√©p b·∫°n s·ª≠ d·ª•ng WebSockets m√† kh√¥ng c·∫ßn ph·∫£i d·ª±a
        v√†o d·ªãch v·ª• b√™n ngo√†i.</p>

    <h3>C√†i ƒë·∫∑t:</h3>
    <p><strong>C√†i ƒë·∫∑t Laravel WebSockets:</strong></p>
    <pre><code>composer require beyondcode/laravel-websockets</code></pre>

    <p><strong>Publish c·∫•u h√¨nh v√† migration:</strong></p>
    <pre><code>php artisan vendor:publish --provider="BeyondCode\LaravelWebSockets\WebSocketsServiceProvider" --tag="migrations"</code></pre>
    <pre><code>php artisan migrate</code></pre>

    <p><strong>Publish c·∫•u h√¨nh WebSockets:</strong></p>
    <pre><code>php artisan vendor:publish --tag="websockets-config"</code></pre>

    <h3>C·∫•u h√¨nh WebSockets trong config/websockets.php:</h3>
    <p>Ch·ªânh s·ª≠a t·ªáp config/websockets.php ƒë·ªÉ ph√π h·ª£p v·ªõi y√™u c·∫ßu c·ªßa b·∫°n:</p>
    <pre><code>
'apps' => [
    [
        'id' => env('APP_ID'),
        'name' => env('APP_NAME'),
        'key' => env('APP_KEY'),
        'secret' => env('APP_SECRET'),
        'path' => env('APP_PATH'),
    ],
],
    </code></pre>

    <h3>Ch·∫°y WebSockets Server:</h3>
    <p>Kh·ªüi ch·∫°y WebSockets server v·ªõi l·ªánh:</p>
    <pre><code>php artisan websockets:serve</code></pre>

    <h3>Frontend:</h3>
    <p>S·ª≠ d·ª•ng Laravel Echo ƒë·ªÉ k·∫øt n·ªëi t·ªõi WebSockets server:</p>
    <pre><code>
Echo.channel('chat')
    .listen('MessageSent', (event) => {
        console.log(event.message);
    });
    </code></pre>

    <h2>‚ö° 3. Soketi ‚Äì T·ª± host, nh·∫π, si√™u nhanh</h2>
    <p>Soketi l√† m·ªôt WebSocket server nh·∫π, c·ª±c k·ª≥ nhanh v√† t∆∞∆°ng th√≠ch v·ªõi API c·ªßa Pusher. N√≥ ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ s·ª≠ d·ª•ng
        √≠t t√†i nguy√™n h∆°n v√† d·ªÖ d√†ng tri·ªÉn khai.</p>

    <h3>C√†i ƒë·∫∑t:</h3>
    <p><strong>T·∫°o Docker container cho Soketi:</strong></p>
    <pre><code>
soketi:
  image: 'quay.io/soketi/soketi:1.5-16-debian'
  ports:
    - "6001:6001"
  environment:
    SOKETI_DEBUG: '1'
    SOKETI_METRICS_ENABLED: '1'
    SOKETI_DEFAULT_APP_ID: 'local'
    SOKETI_DEFAULT_APP_KEY: 'local'
    SOKETI_DEFAULT_APP_SECRET: 'local'
    </code></pre>

    <p><strong>Ch·∫°y Docker container:</strong></p>
    <pre><code>docker-compose up -d</code></pre>

    <h3>C·∫•u h√¨nh .env:</h3>
    <pre><code>
BROADCAST_DRIVER=pusher
PUSHER_APP_ID=local
PUSHER_APP_KEY=local
PUSHER_APP_SECRET=local
PUSHER_APP_CLUSTER=mt1
    </code></pre>

    <h3>Frontend:</h3>
    <p>S·ª≠ d·ª•ng Laravel Echo v·ªõi c·∫•u h√¨nh Pusher API nh∆∞ sau:</p>
    <pre><code>
Echo.channel('chat')
    .listen('MessageSent', (event) => {
        console.log(event.message);
    });
    </code></pre>

    <h2>‚òÅÔ∏è 4. Ably ‚Äì Cloud Broadcaster</h2>
    <p>Ably l√† m·ªôt d·ªãch v·ª• ƒë√°m m√¢y cung c·∫•p kh·∫£ nƒÉng ph√°t s√≥ng d·ªØ li·ªáu real-time. ƒê√¢y l√† m·ªôt gi·∫£i ph√°p ƒë√°m m√¢y m·∫°nh m·∫Ω
        v·ªõi t·ªëc ƒë·ªô cao v√† h·ªó tr·ª£ nhi·ªÅu khu v·ª±c.</p>

    <h3>C√†i ƒë·∫∑t:</h3>
    <p><strong>C√†i ƒë·∫∑t Ably PHP SDK:</strong></p>
    <pre><code>composer require ably/ably-php</code></pre>

    <h3>C·∫•u h√¨nh .env:</h3>
    <pre><code>
BROADCAST_DRIVER=ably
ABLY_KEY=your-ably-key
    </code></pre>

    <h3>C·∫•u h√¨nh trong config/broadcasting.php:</h3>
    <pre><code>
'connections' => [
    'ably' => [
        'driver' => 'ably',
        'key' => env('ABLY_KEY'),
    ],
],
    </code></pre>

    <h3>Frontend:</h3>
    <p>S·ª≠ d·ª•ng Laravel Echo ƒë·ªÉ k·∫øt n·ªëi t·ªõi Ably:</p>
    <pre><code>
Echo.channel('chat')
    .listen('MessageSent', (event) => {
        console.log(event.message);
    });
    </code></pre>

    <h2>üîÅ 5. Redis ‚Äì Custom WebSocket Broadcaster</h2>
    <p>Redis c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng nh∆∞ m·ªôt c√¥ng c·ª• ƒë·ªÉ truy·ªÅn t·∫£i s·ª± ki·ªán qua WebSockets, k·∫øt h·ª£p v·ªõi c√°c th∆∞ vi·ªán nh∆∞
        Socket.IO.</p>

    <h3>C√†i ƒë·∫∑t:</h3>
    <p><strong>C√†i ƒë·∫∑t Redis:</strong></p>
    <pre><code>composer require predis/predis</code></pre>

    <h3>C·∫•u h√¨nh .env:</h3>
    <pre><code>
BROADCAST_DRIVER=redis
    </code></pre>

    <h3>C·∫•u h√¨nh Redis trong config/database.php:</h3>
    <p>Ki·ªÉm tra l·∫°i ph·∫ßn c·∫•u h√¨nh Redis trong t·ªáp n√†y ƒë·ªÉ ƒë·∫£m b·∫£o r·∫±ng Redis ƒë∆∞·ª£c c√†i ƒë·∫∑t ƒë√∫ng.</p>

    <h3>Ch·∫°y Redis Server:</h3>
    <p>ƒê·∫£m b·∫£o Redis ƒëang ch·∫°y tr√™n h·ªá th·ªëng c·ªßa b·∫°n.</p>

    <h3>Frontend:</h3>
    <p>S·ª≠ d·ª•ng Laravel Echo ƒë·ªÉ l·∫Øng nghe s·ª± ki·ªán t·ª´ Redis:</p>
    <pre><code>
Echo.channel('chat')
    .listen('MessageSent', (event) => {
        console.log(event.message);
    });
    </code></pre>

    <h2>üîî L∆∞u √ù Khi S·ª≠ D·ª•ng Queue Trong Broadcasting</h2>
    <p>Trong Laravel Broadcasting, n·∫øu b·∫°n s·ª≠ d·ª•ng <strong>queue</strong> ƒë·ªÉ x·ª≠ l√Ω c√°c s·ª± ki·ªán, b·∫°n c·∫ßn ch·∫Øc ch·∫Øn r·∫±ng
        c√°c <strong>queue worker</strong> ƒëang ch·∫°y ƒë·ªÉ x·ª≠ l√Ω c√°c job (s·ª± ki·ªán) v√† g·ª≠i d·ªØ li·ªáu qua WebSockets. N·∫øu b·∫°n
        kh√¥ng ch·∫°y queue worker, c√°c s·ª± ki·ªán broadcasting c√≥ th·ªÉ kh√¥ng ƒë∆∞·ª£c x·ª≠ l√Ω v√† ph√°t ƒëi.</p>

    <h3>C√°c tr∆∞·ªùng h·ª£p c·∫ßn ch·∫°y <code>queue:work</code>:</h3>
    <ul>
        <li><strong>Redis:</strong> N·∫øu b·∫°n s·ª≠ d·ª•ng Redis ƒë·ªÉ broadcasting, b·∫°n c·∫ßn ch·∫°y queue worker ƒë·ªÉ x·ª≠ l√Ω c√°c s·ª±
            ki·ªán qua queue.</li>
        <li><strong>WebSockets v·ªõi queue:</strong> N·∫øu b·∫°n c·∫•u h√¨nh broadcasting qua queue (d√π l√† Laravel WebSockets hay
            Soketi), b·∫°n c·∫ßn ch·∫°y queue worker ƒë·ªÉ ƒë·∫£m b·∫£o c√°c s·ª± ki·ªán ƒë∆∞·ª£c x·ª≠ l√Ω v√† ph√°t ƒëi.</li>
        <li><strong>Pusher ho·∫∑c Ably v·ªõi queue:</strong> N·∫øu b·∫°n s·ª≠ d·ª•ng d·ªãch v·ª• Pusher ho·∫∑c Ably v·ªõi queue, b·∫°n c≈©ng
            c·∫ßn ch·∫°y queue worker ƒë·ªÉ ƒë·∫£m b·∫£o c√°c s·ª± ki·ªán ƒë∆∞·ª£c ph√°t ƒëi ƒë√∫ng th·ªùi gian.</li>
    </ul>

    <h3>C√°ch ch·∫°y queue worker:</h3>
    <p>ƒê·ªÉ ch·∫°y queue worker, s·ª≠ d·ª•ng l·ªánh sau trong terminal:</p>
    <pre><code>php artisan queue:work</code></pre>

    <p>L·ªánh n√†y s·∫Ω b·∫Øt ƒë·∫ßu x·ª≠ l√Ω c√°c job trong queue, bao g·ªìm c·∫£ c√°c s·ª± ki·ªán broadcasting.</p>

    <p>ƒê·∫£m b·∫£o r·∫±ng queue worker c·ªßa b·∫°n ƒëang ch·∫°y li√™n t·ª•c (ho·∫∑c s·ª≠ d·ª•ng <code>queue:listen</code> n·∫øu c·∫ßn), ƒë·ªÉ c√°c s·ª±
        ki·ªán ƒë∆∞·ª£c g·ª≠i ƒëi ngay khi c√≥ s·ª± thay ƒë·ªïi.</p>



    <h1>üí¨ C√°c Lo·∫°i Chat Trong Laravel Broadcasting</h1>
    <p>Laravel h·ªó tr·ª£ nhi·ªÅu lo·∫°i k√™nh cho vi·ªác chat realtime, bao g·ªìm:</p>

    <h3>1. Public Channel</h3>
    <p>K√™nh c√¥ng khai, m·ªçi ng∆∞·ªùi ƒë·ªÅu c√≥ th·ªÉ tham gia m√† kh√¥ng c·∫ßn x√°c th·ª±c. ƒê√¢y l√† l·ª±a ch·ªçn ph√π h·ª£p khi b·∫°n mu·ªën g·ª≠i
        th√¥ng tin cho t·∫•t c·∫£ ng∆∞·ªùi d√πng.</p>
    <pre><code>broadcast(new MessageSent($message));</code></pre>
    <p>V√≠ d·ª•: G·ª≠i m·ªôt th√¥ng ƒëi·ªáp l√™n k√™nh c√¥ng khai:</p>
    <pre><code>
public function broadcastOn()
{
    return new Channel('chat');
}
</code></pre>

    <h3>2. Private Channel</h3>
    <p>K√™nh ri√™ng t∆∞, ch·ªâ nh·ªØng ng∆∞·ªùi ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c m·ªõi c√≥ th·ªÉ tham gia. ƒê√¢y l√† l·ª±a ch·ªçn ph√π h·ª£p khi b·∫°n mu·ªën g·ª≠i
        th√¥ng tin cho m·ªôt nh√≥m ng∆∞·ªùi d√πng c·ª• th·ªÉ, v√≠ d·ª• nh∆∞ chat gi·ªØa c√°c ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p.</p>
    <pre><code>broadcast(new MessageSent($message))->to('private-chat.'.$userId);</code></pre>
    <p>V√≠ d·ª•: G·ª≠i m·ªôt th√¥ng ƒëi·ªáp l√™n k√™nh ri√™ng t∆∞ cho m·ªôt ng∆∞·ªùi d√πng:</p>
    <pre><code>
public function broadcastOn()
{
    return new Channel('private-chat.' . $this->user->id);
}
</code></pre>

    <h3>3. Presence Channel</h3>
    <p>K√™nh cho ph√©p theo d√µi ng∆∞·ªùi d√πng online v√† offline. Th√¥ng qua Presence Channel, b·∫°n c√≥ th·ªÉ theo d√µi ƒë∆∞·ª£c tr·∫°ng
        th√°i c·ªßa ng∆∞·ªùi d√πng, xem ai ƒëang online ho·∫∑c offline. ƒê√¢y l√† l·ª±a ch·ªçn tuy·ªát v·ªùi cho c√°c ·ª©ng d·ª•ng y√™u c·∫ßu hi·ªÉn
        th·ªã tr·∫°ng th√°i ng∆∞·ªùi d√πng trong th·ªùi gian th·ª±c.</p>
    <pre><code>broadcast(new MessageSent($message))->toPresence('presence-chat');</code></pre>
    <p>V√≠ d·ª•: G·ª≠i th√¥ng ƒëi·ªáp l√™n k√™nh Presence v√† ki·ªÉm tra ai ƒëang online:</p>
    <pre><code>
public function broadcastOn()
{
    return new PresenceChannel('presence-chat');
}
</code></pre>
    <p>ƒê·ªÉ theo d√µi ng∆∞·ªùi d√πng online v√† offline, b·∫°n c·∫ßn s·ª≠ d·ª•ng c√°c s·ª± ki·ªán nh∆∞ `PresenceChannel` ƒë·ªÉ l·∫Øng nghe tr·∫°ng
        th√°i c·ªßa ng∆∞·ªùi d√πng:</p>
    <pre><code>
Echo.join('presence-chat')
    .here((users) => {
        console.log(users);
    })
    .joining((user) => {
        console.log(user.name + ' ƒë√£ tham gia');
    })
    .leaving((user) => {
        console.log(user.name + ' ƒë√£ r·ªùi');
    });
</code></pre>

    <h3>4. M·ªôt S·ªë M·∫πo V√† L∆∞u √ù</h3>
    <ul>
        <li>ƒê·∫£m b·∫£o b·∫°n ƒë√£ c·∫•u h√¨nh ƒë√∫ng trong file <code>.env</code> v√† <code>config/broadcasting.php</code> cho t·ª´ng
            lo·∫°i k√™nh.</li>
        <li>V·ªõi c√°c k√™nh Private v√† Presence, b·∫°n c·∫ßn x√°c th·ª±c ng∆∞·ªùi d√πng tr∆∞·ªõc khi cho ph√©p h·ªç tham gia v√†o k√™nh ƒë√≥.
        </li>
        <li>ƒê·ªÉ gi·∫£m thi·ªÉu l∆∞u l∆∞·ª£ng bƒÉng th√¥ng v√† tƒÉng hi·ªáu su·∫•t, b·∫°n n√™n c·∫©n tr·ªçng khi s·ª≠ d·ª•ng c√°c k√™nh public cho c√°c
            d·ªØ li·ªáu nh·∫°y c·∫£m ho·∫∑c c·∫ßn b·∫£o m·∫≠t.</li>
    </ul>

</body>

</html>
